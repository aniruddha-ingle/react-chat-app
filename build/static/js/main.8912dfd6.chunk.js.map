{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","messagesEndRef","useRef","useEffect","scrollToBottom","current","scrollIntoView","behavior","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","isMyMessagee","width","marinRight","ref","title","height","fontSize","textAlign","marginTop","LoginForm","setusername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","align","required","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8912dfd6.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nconst MessageForm = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) sendMessage(creds, chatId, { text });\n    setValue(\"\");\n  };\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Say it to Slay it...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import React from \"react\";\nconst MyMessage = (message) => {\n  if (message?.message?.attachments?.length > 0) {\n    return (\n      <img\n        src={message.message.attachments[0].file}\n        alt=\"Did not load!\"\n        style={{ float: \"right\" }}\n      />\n    );\n  }\n  return (\n    <div\n      className=\"message\"\n      style={{\n        float: \"right\",\n        marginRight: \"18px\",\n        color: \"white\",\n        backgroundColor: \"#3B2A50\",\n      }}\n    >\n      {message.message.text}\n    </div>\n  );\n};\n\nexport default MyMessage;\n","const TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser =\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\n        />\n      )}\n      {message?.attachments?.length > 0 ? (\n        <img\n          src={message.attachments[0].file}\n          alt=\"did not upload!\"\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\n        />\n      ) : (\n        <div\n          className=\"message\"\n          style={{\n            float: \"left\",\n            backgroundColor: \"#CABCDC\",\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\n          }}\n        >\n          {message.text}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TheirMessage;\n","import React, { useRef, useEffect } from \"react\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n  const chat = chats && chats[activeChat]; //the and operator ensures that we dont get a null error\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const renderReadReceipts = (message, isMyMessage) => {\n    return chat?.people?.map(\n      (person, index) =>\n        person.last_read === message.id && (\n          <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n              float: isMyMessage ? \"right\" : \"left\",\n              backgroundImage: `url(${person?.person?.avatar})`,\n            }}\n          />\n        )\n    );\n  };\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessagee = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isMyMessagee ? (\n              <MyMessage message={message} />\n            ) : (\n              <TheirMessage\n                message={message}\n                lastMessage={messages[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marinRight: isMyMessagee ? \"18px\" : \"0px\",\n              marginLeft: isMyMessagee ? \"0px\" : \"68px\",\n            }}\n          >\n            {renderReadReceipts(message, isMyMessagee)}\n          </div>\n          <div ref={messagesEndRef} />\n        </div>\n      );\n    });\n  };\n  renderMessages();\n\n  if (!chat)\n    return (\n      <div\n        style={{\n          fontSize: \"4rem\",\n          textAlign: \"centre\",\n          marginTop: \"50%\",\n          marginLeft: \"25%\",\n        }}\n        className=\"chat-title\"\n      >\n        Come on! Get Chatty!\n      </div>\n    );\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">\n          {chat.title}\n          <div className=\"chat-subtitle\">\n            {chat.people.map((person) => ` ${person.person.username}`)}\n          </div>\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n  const [username, setusername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const authObject = {\n      \"Project-Id\": \"a4183f34-59e5-4795-9341-2e1bcbdac042\",\n      \"User-Name\": username,\n      \"User-Secret\": password,\n    };\n    try {\n      await axios.get(\"https://api.chatengine.io/chats\", {\n        headers: authObject,\n      });\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"password\", password);\n      window.location.reload();\n    } catch (ex) {\n      setError(\"Invalid Credentials, Try Again!\");\n    }\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\" align=\"centre\">\n        <h1 className=\"title\">Esoteric Entry Chatter</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setusername(e.target.value)}\n            className=\"input\"\n            placeholder=\"Username\"\n            required\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n            placeholder=\"Password\"\n            required\n          />\n          <div>\n            <button\n              type=\"submit\"\n              style={{ marginLeft: \"20px\" }}\n              className=\"button\"\n            >\n              <span>Start Chatting</span>\n            </button>\n          </div>\n        </form>\n        <h2 className=\"error\">{error}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { ChatEngine } from \"react-chat-engine\";\nimport \"./App.css\";\nimport ChatFeed from \"./components/ChatFeed\";\nimport LoginForm from \"./components/LoginForm\";\n\nconst App = () => {\n  if (!localStorage.getItem(\"username\")) {\n    return <LoginForm />;\n  }\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"a4183f34-59e5-4795-9341-2e1bcbdac042\"\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root') );"],"sourceRoot":""}